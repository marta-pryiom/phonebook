{"version":3,"sources":["Component/ContactForm/ContactForm.module.css","Component/ContactList/ContactList.module.css","Component/Filter/Filter.module.css","Component/App/App.module.css","Component/Container/Container.module.css","Component/Container/Container.js","Component/ContactForm/ContactForm.js","Component/Filter/Filter.js","Component/ContactList/ContactList.js","Component/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","Box","Form","preventDefault","contact","id","uuidv4","Label","Input","type","placeholder","pattern","title","required","onChange","Btn","disabled","length","Filter","filter","FilterTitle","ContactList","contacts","onDeleteContact","map","ContactItem","Text","onClick","App","setFilter","JSON","parse","localStorage","getItem","contactsArray","setContacts","useEffect","setItem","stringify","info","el","toLowerCase","includes","alert","newContact","console","log","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,IAAM,yBAAyB,KAAO,0BAA0B,MAAQ,2BAA2B,MAAQ,2BAA2B,IAAM,2B,kBCA9JD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,YAAc,iCAAiC,KAAO,4B,iBCAvHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,YAAc,4BAA4B,MAAQ,wB,iBCApGD,EAAOC,QAAU,CAAC,MAAQ,qB,kBCA1BD,EAAOC,QAAU,CAAC,UAAY,+B,kcCUfC,MARf,YAAkC,IAAbC,EAAY,EAAZA,SACjB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCsF1BI,MArFf,YAAoC,IAAbC,EAAY,EAAZA,SACnB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAaMC,EAAe,SAAAC,GACjB,MAAwBA,EAAEC,OAAlBN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,MACd,OAAQP,GACJ,IAAK,OACDC,EAAQM,GACR,MACJ,IAAK,SACDJ,EAAUI,GACV,MACJ,QACI,SAINC,EAAQ,WACVP,EAAQ,IACRE,EAAU,KAGd,OACI,qBAAKT,UAAWC,IAAEc,IAAlB,SACI,uBAAMf,UAAWC,IAAEe,KAAMZ,SAhCZ,SAAAO,GACjBA,EAAEM,iBACF,IAAMC,EAAU,CACZC,GAAIC,cACJd,OACAE,UAEJJ,EAASc,GACTJ,KAwBI,UACI,wBAAOd,UAAWC,IAAEoB,MAApB,iBAEI,uBACIrB,UAAWC,IAAEqB,MACbT,MAAOP,EACPiB,KAAK,OACLjB,KAAK,OACLkB,YAAY,aACZC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUlB,OAIlB,wBAAOV,UAAWC,IAAEoB,MAApB,mBAEI,uBACIrB,UAAWC,IAAEqB,MACbC,KAAK,MACLV,MAAOL,EACPF,KAAK,SACLkB,YAAY,eACZC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUlB,OAIlB,wBAAQV,UAAWC,IAAE4B,IAAKC,SAA0B,IAAhBxB,EAAKyB,OAAzC,+B,gBC/CDC,MAtBf,YAAuC,IAArBC,EAAoB,EAApBA,OAAQL,EAAY,EAAZA,SACtB,OACI,qBAAK5B,UAAWC,IAAE+B,OAAlB,SACI,wBAAOhC,UAAWC,IAAEiC,YAApB,kCAEI,uBACIlC,UAAWC,IAAEqB,MACbC,KAAK,OACLjB,KAAK,OACLO,MAAOoB,EACPL,SAAUA,U,gBCkBfO,MA5Bf,YAAqD,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,gBAC7B,OACI,oBAAIrC,UAAWC,IAAEkC,YAAjB,SACKC,EAASE,KAAI,gBAAGhC,EAAH,EAAGA,KAAME,EAAT,EAASA,OAAQW,EAAjB,EAAiBA,GAAjB,OACV,qBAAaA,GAAIlB,IAAEsC,YAAnB,UACI,oBAAGvC,UAAWC,IAAEuC,KAAhB,UAAuBlC,EAAvB,OACA,oBAAGN,UAAWC,IAAEuC,KAAhB,UAAuBhC,EAAvB,OACA,wBAAQe,KAAK,SAASkB,QAAS,kBAAMJ,EAAgBlB,IAArD,sBAHKA,S,QCwDVuB,MArDf,WAGI,MAA4BrC,mBAAS,IAArC,mBAAO4B,EAAP,KAAeU,EAAf,KAGA,EAAgCtC,oBAAS,WAAO,IAAD,EAC3C,iBAAOuC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAvC,QAAuDC,KAD3D,mBAAOZ,EAAP,KAAiBa,EAAjB,KAiCA,OA7BAC,qBAAU,WACNJ,aAAaK,QAAQ,WAAYP,KAAKQ,UAAUhB,MACjD,CAACA,IA4BA,eAAC,EAAD,WACI,oBAAIpC,UAAWC,IAAEyB,MAAjB,uBACA,cAAC,EAAD,CAAatB,SA5BF,SAAAiD,GAIf,GAHuBjB,EAClBE,KAAI,SAAAgB,GAAE,OAAIA,EAAGhD,KAAKiD,iBAClBC,SAASH,EAAK/C,KAAKiD,eAEpB,OAAOE,MAAM,GAAD,OAAIJ,EAAK/C,KAAT,4BAEZ,IAAMoD,EAAU,2BAAQL,GAAR,IAAclC,GAAIC,gBAClC6B,EAAY,CAACS,GAAF,mBAAiBtB,QAqB5B,oBAAIpC,UAAWC,IAAEyB,MAAjB,sBACA,cAAC,EAAD,CAAQO,OAAQA,EAAQL,SAnBJ,SAAAjB,GACxBgC,EAAUhC,EAAEC,OAAOC,UAmBf,cAAC,EAAD,CACIuB,UAhBRuB,QAAQC,IAAIxB,GACLA,EAASH,QAAO,SAAAf,GAAO,OAC1BA,EAAQZ,KAAKiD,cAAcC,SAASvB,EAAOsB,mBAevClB,gBAXU,SAAAwB,GAClBZ,EAAYb,EAASH,QAAO,SAAAf,GAAO,OAAIA,EAAQC,KAAO0C,aC1C9DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b52640b8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Box\":\"ContactForm_Box__29oye\",\"Form\":\"ContactForm_Form__3W_hm\",\"Label\":\"ContactForm_Label__2Y95S\",\"Input\":\"ContactForm_Input__TW6wI\",\"Btn\":\"ContactForm_Btn__3ANan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__2rZRH\",\"ContactItem\":\"ContactList_ContactItem__1S3yL\",\"Text\":\"ContactList_Text__253k4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__pcoeC\",\"FilterTitle\":\"Filter_FilterTitle__2VG3t\",\"Input\":\"Filter_Input___VcMW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__32QXy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2ho9y\"};","import s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n    return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactForm.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const contact = {\r\n            id: uuidv4(),\r\n            name,\r\n            number,\r\n        };\r\n        onSubmit(contact);\r\n        reset();\r\n    };\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target;\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n            default:\r\n                return;\r\n        }\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('');\r\n        setNumber('');\r\n    };\r\n\r\n    return (\r\n        <div className={s.Box}>\r\n            <form className={s.Form} onSubmit={handleSubmit}>\r\n                <label className={s.Label}>\r\n                    Name\r\n                    <input\r\n                        className={s.Input}\r\n                        value={name}\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        placeholder=\"Enter name\"\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <label className={s.Label}>\r\n                    Number\r\n                    <input\r\n                        className={s.Input}\r\n                        type=\"tel\"\r\n                        value={number}\r\n                        name=\"number\"\r\n                        placeholder=\"Enter number\"\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                </label>\r\n\r\n                <button className={s.Btn} disabled={name.length === 0}>\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func,\r\n    handleChange: PropTypes.func,\r\n    handleAgreeChange: PropTypes.func,\r\n    nameId: PropTypes.number,\r\n    numberId: PropTypes.number,\r\n    agreeId: PropTypes.number,\r\n};\r\n\r\nexport default ContactForm;\r\n","import s from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Filter({ filter, onChange }) {\r\n    return (\r\n        <div className={s.Filter}>\r\n            <label className={s.FilterTitle}>\r\n                Find contacts by name\r\n                <input\r\n                    className={s.Input}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={filter}\r\n                    onChange={onChange}\r\n                />\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n    filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import s from './ContactList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n    return (\r\n        <ul className={s.ContactList}>\r\n            {contacts.map(({ name, number, id }) => (\r\n                <li key={id} id={s.ContactItem}>\r\n                    <p className={s.Text}>{name}:</p>\r\n                    <p className={s.Text}>{number}:</p>\r\n                    <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n            id: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { useState, useEffect } from 'react';\r\nimport s from './App.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Container from '../Container';\r\nimport ContactForm from '../ContactForm';\r\nimport Filter from '../Filter';\r\nimport ContactList from '../ContactList';\r\nimport contactsArray from '../../contacts.json';\r\n// import { useHookLocalStorage } from '../../hooks/useHookLocalStorage';\r\n\r\nfunction App() {\r\n    // const [contacts, setContacts] =\r\n    //     useHookLocalStorage('contacts') ?? contactsArray;\r\n    const [filter, setFilter] = useState('');\r\n\r\n    /*без hook-localStorage */\r\n    const [contacts, setContacts] = useState(() => {\r\n        return JSON.parse(localStorage.getItem('contacts')) ?? contactsArray;\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('contacts', JSON.stringify(contacts));\r\n    }, [contacts]);\r\n\r\n    const formSubmit = info => {\r\n        const searchSameName = contacts\r\n            .map(el => el.name.toLowerCase())\r\n            .includes(info.name.toLowerCase());\r\n        if (searchSameName) {\r\n            return alert(`${info.name} is already in contacts`);\r\n        } else {\r\n            const newContact = { ...info, id: uuidv4() };\r\n            setContacts([newContact, ...contacts]);\r\n        }\r\n    };\r\n    const setFilteredContacts = e => {\r\n        setFilter(e.target.value);\r\n    };\r\n\r\n    const getVisibleContact = () => {\r\n        console.log(contacts);\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    };\r\n\r\n    const deleteContact = contactId => {\r\n        setContacts(contacts.filter(contact => contact.id !== contactId));\r\n    };\r\n    return (\r\n        <Container>\r\n            <h1 className={s.title}>Phonebook</h1>\r\n            <ContactForm onSubmit={formSubmit} />\r\n            <h2 className={s.title}>Contacts</h2>\r\n            <Filter filter={filter} onChange={setFilteredContacts} />\r\n            <ContactList\r\n                contacts={getVisibleContact()}\r\n                onDeleteContact={deleteContact}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Component/App/App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}